
import React from 'react';
import { School } from '../types';

interface SchoolListProps {
  schools: School[];
  onExportCSV: () => void;
  searchedAddress: string;
}

const NotAvailableText: React.FC = () => (
  <span className="text-slate-500 italic">Not available</span>
);

export const SchoolList: React.FC<SchoolListProps> = ({ schools, onExportCSV, searchedAddress }) => {
  if (schools.length === 0) {
    return null;
  }

  return (
    <div className="mt-8">
      <div className="flex flex-col sm:flex-row justify-between items-center mb-4">
        <h2 className="text-2xl font-semibold text-sky-300 mb-2 sm:mb-0">
          Found Schools Near: <span className="text-sky-400 font-normal">{searchedAddress}</span>
        </h2>
        <button
          onClick={onExportCSV}
          className="bg-emerald-500 hover:bg-emerald-600 text-white font-semibold py-2 px-4 rounded-md transition-colors duration-150 flex items-center disabled:opacity-50 disabled:cursor-not-allowed"
          disabled={schools.length === 0}
          aria-label="Export school data as CSV"
        >
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-5 h-5 mr-2">
            <path strokeLinecap="round" strokeLinejoin="round" d="M9 8.25H7.5a2.25 2.25 0 0 0-2.25 2.25v9a2.25 2.25 0 0 0 2.25 2.25h9a2.25 2.25 0 0 0 2.25-2.25v-9a2.25 2.25 0 0 0-2.25-2.25H15M9 12l3 3m0 0 3-3m-3 3V2.25" />
          </svg>
          Export as CSV
        </button>
      </div>
      <div className="overflow-x-auto bg-slate-700 shadow-md rounded-lg">
        <table className="min-w-full divide-y divide-slate-600">
          <thead className="bg-slate-750">
            <tr>
              <th scope="col" className="px-4 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider">
                School Name
              </th>
              <th scope="col" className="px-4 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider">
                Address
              </th>
              <th scope="col" className="px-4 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider">
                Type
              </th>
              <th scope="col" className="px-4 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider">
                Students
              </th>
              <th scope="col" className="px-4 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider">
                Phone
              </th>
              <th scope="col" className="px-4 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider">
                Principal
              </th>
              <th scope="col" className="px-4 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider">
                Assistant
              </th>
              <th scope="col" className="px-4 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider">
                Manager Email
              </th>
              <th scope="col" className="px-4 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider">
                Assistant Email
              </th>
            </tr>
          </thead>
          <tbody className="bg-slate-700 divide-y divide-slate-600">
            {schools.map((school, index) => (
              <tr key={index} className="hover:bg-slate-650 transition-colors duration-150">
                <td className="px-4 py-4 whitespace-nowrap text-sm font-medium text-slate-100">{school.name}</td>
                <td className="px-4 py-4 whitespace-normal text-sm text-slate-300">{school.address}</td>
                <td className="px-4 py-4 whitespace-nowrap text-sm text-slate-300">{school.type}</td>
                <td className="px-4 py-4 whitespace-nowrap text-sm text-slate-300 text-right">{school.studentCount.toLocaleString()}</td>
                <td className="px-4 py-4 whitespace-nowrap text-sm text-slate-300">{school.phoneNumber ? school.phoneNumber : <NotAvailableText />}</td>
                <td className="px-4 py-4 whitespace-nowrap text-sm text-slate-300">{school.principalName ? school.principalName : <NotAvailableText />}</td>
                <td className="px-4 py-4 whitespace-nowrap text-sm text-slate-300">{school.assistantName ? school.assistantName : <NotAvailableText />}</td>
                <td className="px-4 py-4 whitespace-nowrap text-sm text-slate-300">{school.managerEmail ? school.managerEmail : <NotAvailableText />}</td>
                <td className="px-4 py-4 whitespace-nowrap text-sm text-slate-300">{school.assistantEmail ? school.assistantEmail : <NotAvailableText />}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
      <p className="mt-3 text-xs text-slate-500 text-center">
        Displaying {schools.length} fictional school(s). Data generated by AI.
      </p>
    </div>
  );
};
